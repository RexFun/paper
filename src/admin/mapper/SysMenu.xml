<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
  
<mapper namespace="admin.entity.SysMenu">
      <!-- 自动生成id策略 -->
    <insert id="add" parameterType="admin.entity.SysMenu" useGeneratedKeys="true" keyProperty="id">  
       	insert into sys_menu(pid, 
       						 tc_code, 
       						 tc_name, 
       						 tc_url, 
       						 tc_order,
       						 tc_sys_permit_id) 
       	values (<choose><when test="m.pid != null and m.pid != ''">#{m.pid}, </when><otherwise>0,</otherwise></choose>
       			#{m.tc_code},
       			#{m.tc_name},
       			#{m.tc_url},
       			#{m.tc_order},
       			<choose><when test="m.tc_sys_permit_id != null and m.tc_sys_permit_id != ''">#{m.tc_sys_permit_id}</when><otherwise>null</otherwise></choose>)  
    </insert>  
	
	<delete id="del" parameterType="admin.entity.SysMenu">
		delete from sys_menu where id = #{id}
	</delete>
	
	<update id="upd" parameterType="admin.entity.SysMenu">
		update sys_menu set
		  pid = <choose><when test="m.pid != null and m.pid != ''">#{m.pid}, </when><otherwise>0,</otherwise></choose>
		  tc_code = #{m.tc_code},
		  tc_name = #{m.tc_name},
		  tc_url = #{m.tc_url},
		  tc_order = #{m.tc_order},
		  tc_sys_permit_id = <choose><when test="m.tc_sys_permit_id != null and m.tc_sys_permit_id != ''">#{m.tc_sys_permit_id}</when><otherwise>null</otherwise></choose>
		where id = #{m.id}
	</update>
  	
	<resultMap type="admin.entity.SysMenu" id="result">
		<id property="m.id" column="id"/>
		<result property="m.pid" column="pid"/>
		<result property="m.tc_code" column="tc_code"/>
		<result property="m.tc_name" column="tc_name"/>
		<result property="m.tc_p_name" column="tc_p_name"/>
		<result property="m.tc_url" column="tc_url"/>
		<result property="m.tc_order" column="tc_order"/>
		<result property="m.tc_sys_permit_id" column="tc_sys_permit_id"/>
		<result property="m.tc_sys_permit_name" column="tc_sys_permit_name"/>
	</resultMap>
  	
	<sql id="columns">
		t.ID, t.PID, t.TC_CODE, t.TC_NAME, t.TC_URL, t.TC_ORDER, t.TC_SYS_PERMIT_ID
	</sql>
	<sql id="columns1">
		t1.ID, t1.PID, t1.TC_CODE, t1.TC_NAME, t1.TC_URL, t1.TC_ORDER, t1.TC_SYS_PERMIT_ID
	</sql>
	
	<sql id="page">
		<if test="offset!=null and limit!=null"> limit #{offset,javaType=String,jdbcType=NUMERIC}, #{limit,javaType=String,jdbcType=NUMERIC} </if>
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="tc_code != null and tc_code != ''"> and t.TC_CODE like concat('%',#{tc_code},'%') </if>
			<if test="tc_name != null and tc_name != ''"> and t.TC_NAME like concat('%',#{tc_name},'%') </if>
			<if test="tc_p_name != null and tc_p_name != ''"> and tt.TC_NAME like concat('%',#{tc_p_name},'%') </if>
		</where>
	</sql>	
	
	<select id="getById" resultMap="result">
		select <include refid="columns"/>, tt.tc_name TC_P_NAME, t1.tc_name TC_SYS_PERMIT_NAME
		  from sys_menu t
		  left join sys_menu tt on t.pid = tt.id
		  left join sys_permit t1 on t.tc_sys_permit_id = t1.id
		 where t.id = #{id}
	</select>
	
	<select id="get" resultType="list" resultMap="result">
		select <include refid="columns"/>, tt.tc_name TC_P_NAME, t1.tc_name TC_SYS_PERMIT_NAME
		  from sys_menu t
		  left join sys_menu tt on t.pid = tt.id
		  left join sys_permit t1 on t.tc_sys_permit_id = t1.id
		<include refid="dynamicWhere" /> order by t.tc_order
		<include refid="page" />
	</select>
	
	<select id="getByUserId" resultType="list" resultMap="result">
		select <include refid="columns"/>  from sys_menu t
		 inner join sys_role_permit_mapping t1 on t.tc_sys_permit_id=t1.tc_sys_permit_id
		 inner join sys_user_role_mapping t2 on t1.tc_sys_role_id=t2.tc_sys_role_id and t2.tc_sys_user_id=#{tc_sys_user_id}
		 group by t.id
		 order by t.tc_order
	</select>
	
	<!-- 
	<select id="getByUserIdAndParams" resultType="list" resultMap="result">
		select <include refid="columns"/>  from sys_menu t
		 inner join sys_role_permit_mapping t1 on t.tc_sys_permit_id=t1.tc_sys_permit_id
		 inner join sys_user_role_mapping t2 on t1.tc_sys_role_id=t2.tc_sys_role_id and t2.tc_sys_user_id=#{tc_sys_user_id}
		 <include refid="dynamicWhere" />
		 group by t.id
		 order by t.tc_order
	</select>
	 -->
	<select id="getByUserIdAndParams" resultType="list" resultMap="result">
		{call p_get_menu(#{tc_sys_user_id},#{tc_name})}
	</select>
	 
	<select id="getCount" resultType="int">
		select count(1) from sys_menu t
		  left join sys_menu tt on t.pid = tt.id
		<include refid="dynamicWhere" />
	</select>
</mapper>  
